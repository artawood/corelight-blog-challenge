[
  {
    "id": 1,
    "title": "The last BroCon. It’ll be Zeek in 2019!",
    "image": "https://corelightblog.files.wordpress.com/2018/11/img_2198-2.jpg?w=1224",
    "datePosted": "NOVEMBER 5, 2018",
    "author": "Robin Sommer",
    "authorRole": "CTO at Corelight and member of the Zeek Leadership Team",
    "summary": "I’m back in San Francisco after the last ever BroCon! Why the last BroCon? Because the Bro Leadership Team has announced a new name for the project. After two years of discussion, no shortage of suggestions, and a final shortlist going through legal review, it was time to commit: It’ll be Zeek! For an explanation of the rationale & background behind the choice, make sure to read Vern Paxson’s blog post or watch him skillfully revealing the new name at the conference.",
    "details": "By holding BroCon in the Washington DC area this year, we were hoping to broaden participation\u2014and that worked: 260 people attended, up over 35% from last year.  We also had the support of eleven corporate sponsors\u2014more than ever!-\u2014which we deeply appreciate. These companies offered attendees a chance to learn about a variety of products and services helping people use and implement Zeek, either in its open source form or as part of commercial offerings.\r\n\r\nI think BroCon\u2019s program was particularly strong this year. Marcus Ranum kicked it off with an entertaining and provocative keynote. The main technical program then offered a terrific set of presentations covering a variety of organizations and topics. Some of the conference highlights for me were:\r\n\r\nThe sheer number of use cases. In the sessions, we saw things like:\r\nusing weirds to diagnose split routing problems\r\nusing the conn_long log to identify exfiltration / C2 / rogue IT activity\r\nusing JA3S to extend SSL fingerprinting to the server side\r\nusing SMB logs to find named pipes in the Belgacom attack.  \r\nWatching Salesforce and Morgan Stanley stand up and explain how they use Bro to defend themselves was inspirational.\r\nThe depth of technical expertise among attendees was really impressive. Folks keep pushing the boundary of how to scale Zeek clusters and come up with clever use cases of its various frameworks.\r\nSelling Bro posters to benefit Girls Who Code was fantastic.\r\nVern\u2019s \u201CZeek\u201D name reveal moment and the positive reception of the name change by the broader community.\r\nWe received permission to record most of the talks and are currently editing the material to synchronize videos with slide sets. As soon as that\u2019s finished, we\u2019ll upload them to the Bro YouTube channel.\r\n\r\nAs we look to next year, the Zeek Leadership Team will begin planning the 2019 event soon. If you have attended this year, please take a moment to fill out the attendee survey; you should have received a link to provide us with feedback about program and logistics. In 2019, we\u2019ll also do another European workshop as well. Registration details will come soon, but you can save the date already: We\u2019ll be at CERN, Switzerland, from April 9-11.\r\n\r\nLastly, it will take some time to really make the change from Bro to Zeek. The soon-to-be-released version 2.6 will still be \u201CBro\u201D\u2014from then on it\u2019ll be \u201CZeek.\u201D Over the coming weeks and months you will start seeing changes, but rest assured we\u2019ll be careful: There\u2019s a lot to update, and we certainly don\u2019t want to break your deployments.\r\n\r\nThanks for attending the last ever BroCon!"
  },
  {
    "id": 2,
    "title": "Log enrichment with DNS host names",
    "image": "",
    "datePosted": "OCTOBER 25, 2018",
    "author": "Christian Kreibich",
    "authorRole": "Senior Engineer, Corelight",
    "summary": "One of the first tasks for any incident responder when looking at network logs is to figure out the host names that were associated with an IP address in prior network activity. With Corelight’s 1.15 release we help automate the process and I would like to explain how this works.",
    "details": "Zeek (formerly known as Bro) provides a logging framework that gives users great control over summarization and reporting of network activity. Equipped with dozens of logs by default, it provides convenient features to extend these logs with additional fields, filter log entries according to user-defined criteria, create new log types, and hook new activity into logging events. Several log types provide identifiers that allow convenient pivoting from one log type to another, such as conn.log\u2019s UID that many other log types use to link app-layer activity to the underlying TCP/IP flows.\r\n\r\nOther information is only implicitly linked across log types, so analysts need to reveal it in manual SIEM-based post-processing. One example of such implicitly available information is host naming, which lets analysts look past IP addresses like 216.218.185.162 to corresponding (and often revealing) DNS names like ujkwwvftddjk.ru, a recent example from Spamhaus\u2019s DBL. While Zeek\u2019s dns.log closely tracks address-name associations, other logs do not repeat this information. Manually establishing the cross-log linkage can prove tedious since offline resolution of those names generally does not provide accurate results. Instead, one needs to identify historic name lookups that temporally most closely preceded TCP/IP flows to/from resulting IP addresses. (Other approaches, such as leveraging HTTP Host headers, also exist but here we were looking for the most generic approach.)\r\n\r\nZeek\u2019s stateful network-oriented scripting language makes it ideally suited to automate such linkage: we can enrich desired logs with DNS host names in response to network events unfolding in real time. In Corelight\u2019s 1.15 release we provide this ability via the Namecache feature. When enabled, Zeek starts monitoring forward and reverse DNS name lookups and establishes address-name mappings that allow subsequent conn.log entries to include names and the source of the naming (here, DNS A or PTR queries). For analysts requiring immediate access to host names, conn.log now readily provides this information. The following (slightly pruned) log snippet using Zeek\u2019s JSON format shows an example:\r\n\r\n{\r\n\u201Cts\u201D:1531868622.082572,\r\n\u201Cuid\u201D:\u201DC4J4Th3PJpwUYZZ6gc\u201D,\r\n\u201Cid.orig_h\u201D:\u201D192.168.1.113\u2033,\r\n\u201Cid.orig_p\u201D:38194,\r\n\u201Cid.resp_h\u201D:\u201D192.150.187.12\u2033,\r\n\u201Cid.resp_p\u201D:80,\r\n\u2026,\r\n\u201Cid.orig_h.name.src\u201D:\u201DDNS_A\u201D,\r\n\u201Cid.orig_h.name.vals\u201D:[\u201Cchristian.local\u201D],\r\n\u201Cid.resp_h.name.src\u201D:\u201DDNS_A\u201D,\r\n\u201CId.resp_h.name.vals\u201D:[\u201Cicir.org\u201D]\r\n}\r\n\r\nOur data analysis shows that for the most relevant addresses \u2014 those outside of local networks \u2014 Namecache can establish names in more than 90% of log entries. In addition to the conn.log enrichment the feature adds a separate log, reporting operational statistics (powered by the SumStats framework) such as the cache hit rate in various contexts. Starting with the 1.16 release, you\u2019ll see local vs non-local hit rates for your network as well.\r\n\r\nNone of the above required patching the core Zeek distribution. All functionality exists in form of new event handlers and state managed via the scripting language. Nevertheless, implementing Namecache posed some interesting technical challenges. Most immediately, Bro\u2019s multiprocessing architecture and flow distribution mean that in a cluster setting (which we do use in our Sensors) the Zeek worker observing a DNS lookup most likely is not the one observing the TCP/IP connection to the resulting IP address. Moreover, since their respective processing is fully asynchronous we also cannot guarantee that processing the DNS query finishes prior to that of the subsequent TCP/IP connection. Finally, to approach global visibility of the address\u2013name mappings, we need to communicate the mappings across the cluster via Bro events, raising questions about event communication patterns, sustainable event rates, and processing races.\r\n\r\nOne key observation immediately simplified the problem: Zeek writes conn.log entries only when it expires its state for a given flow, i.e., at the very end of the flow\u2019s lifetime. This means we have at least several seconds to propagate naming information for this flow across the cluster before needing to access it.\r\n\r\nThis left the event flow to tackle. In a first iteration we decided to centralize mapping ownership in the manager process: workers communicate new mappings to the manager process, which propagates additions to other workers and tracks mapping size and age. When mapping state needs to get pruned, the manager sends explicit pruning events to the workers. This proved clearly inferior to a distributed approach where the workers manage mappings autonomously, including expirations, and only communicate new mappings to the manager. The manager in turn only relays additions across the workers, saving the memory needed for an extra copy of the mappings. This approach worked quite well but induced a few percent of packet loss on our most heavily loaded AP-1000 appliances. In a final tweak, we tuned the rate at which workers transmit mapping additions. With this change we no longer observed any operational overhead of the activated Namecache feature while preserving its effectiveness.\r\n\r\nThe Namecache feature is only one example of a wide range of log enrichments we envision. We\u2019ll soon migrate the cluster communication to the new Broker framework, add improved multicast DNS support, and we\u2019re considering other sources of naming as well as inverse mappings where names get enriched with corresponding IP addresses."
  },
  {
    "id": 3,
    "title": "Network security monitoring vs supply chain backdoors",
    "image": "",
    "datePosted": "OCTOBER 4, 2018",
    "author": "Richard Bejtlich",
    "authorRole": "Principal Security Strategist, Corelight",
    "summary": "On October 4, 2018, Bloomberg published a story titled \u201CThe Big Hack: How China Used a Tiny Chip to Infiltrate U.S. Companies,\u201D with a subtitle \u201CThe attack by Chinese spies reached almost 30 U.S. companies, including Amazon and Apple, by compromising America\u2019s technology supply chain, according to extensive interviews with government and corporate sources.\u201D ",
    "details": "From the article:\r\n\r\nSince the implants were small, the amount of code they contained was small as well. But they were capable of doing two very important things: telling the device to communicate with one of several anonymous computers elsewhere on the internet that were loaded with more complex code; and preparing the device\u2019s operating system to accept this new code. The illicit chips could do all this because they were connected to the baseboard management controller, a kind of superchip that administrators use to remotely log in to problematic servers, giving them access to the most sensitive code even on machines that have crashed or are turned off.\r\n\r\nCompanies mentioned in the story deny the details, so this post does not debate the merit of the Bloomberg reporters\u2019 claims. Rather, I prefer to discuss how a computer incident response team (CIRT) and a chief information security officer (CISO) should handle such a possibility. What should be done when hardware-level attacks enabling remote access via the network are possible?\r\n\r\nThis is not a new question. I have addressed the architecture and practices needed to mitigate this attack model in previous writings. This scenario is a driving force behind my recommendation for network security monitoring (NSM) for any organization running a network, of any kind. This does not mean endpoint-centric security, or other security models, should be abandoned. Rather, my argument shows why NSM offers unique benefits when facing hardware supply chain attacks.\r\n\r\nThe problem is one of trust and detectability. The problem here is that one loses trust in the integrity of a computing platform when one suspects a compromised hardware environment. One way to validate whether a computing platform is trustworthy is to monitor outside of it, at places where the hardware cannot know it is being monitored, and cannot interfere with that monitoring. Software installed on the hardware is by definition untrustworthy because the hardware backdoor may have the capability to obscure or degrade the visibility and control provided by an endpoint agent.\r\n\r\nNetwork security monitoring applied outside the hardware platform does not suffer this limitation, if certain safeguards are implemented. NSM suffers limitations unique to its deployment, of course, and they will be outlined shortly. By watching traffic to and from a suspected computing platform, CIRTs have a chance to identify suspicious and malicious activity, such as contact with remote command and control (C2) infrastructure. NSM data on this C2 activity can be collected and stored in many forms, such as any of the seven NSM data types: 1) full content; 2) extracted content; 3) session data; 4) transaction data; 5) statistical data; 6) metadata; and 7) alert data.\r\n\r\nMost likely session and transaction data would have been most useful for the case at hand. Once intelligence agencies identified that command and control infrastructure used by the alleged Chinese agents in this example, they could provide that information to the CIRT, who could then query historical NSM data for connectivity between enterprise assets and C2 servers. The results of those queries would help determine if and when an enterprise was victimized by compromised hardware.\r\n\r\nThe limitations of this approach are worth noting. First, if the intruders never activated their backdoors, then there would be no evidence of communications with C2 servers. Hardware inspection would be the main way to deal with this problem. Second, the intruders may leverage popular Internet services for their C2. Historical examples include command and control via Twitter, domain fronting via Google or other Web sites, and other covert channels. Depending on the nature of the communication, it would be difficult, though not impossible, to deal with this situation, mainly through careful analysis. Third, traditional network-centric monitoring would be challenging if the intruders employed an out-of-band C2 channel, such as a cellular or radio network. This has been seen in the wild but does not appear to be the case in this incident. Technical countermeasures, whereby rooms are swept for unauthorized signals, would have to be employed. Fourth, it\u2019s possible, albeit unlikely, that NSM sensors tasked with watching for suspicious and malicious activity are themselves hosted on compromised hardware, making their reporting also untrustworthy.\r\n\r\nThe remedy for the last instance is easier than that for the previous three. Proper architecture and deployment can radically improve the trust one can place in NSM sensors. First, the sensors should not be able to connect to arbitrary systems on the Internet. The most security conscious administrators apply patches and modifications using direct access to trusted local sources, and do not allow access for any reason other than data retrieval and system maintenance. In other words, no one browses Web sites or checks their email from NSM sensors! Second, this moratorium on arbitrary connections should be enforced by firewalls outside the NSM sensors, and any connection attempts that violate the firewall policy should generate a high-priority alert. It is again theoretically possible for an extremely advanced intruder to circumvent these controls, but this approach increases the likelihood of an adversary tripping a wire at some point, revealing his or her presence.\r\n\r\nThe bottom line is that NSM must be a part of the detection and response strategy for any organization that runs a network. Collecting and analyzing the core NSM data types, in concert with host-based security, integration with third party intelligence, and infrastructure logging, provides the best chance for CIRTs to detect and respond to the sorts of adversaries who escalate their activities to the level of hardware hacking via the supply chain. Whether or not the Bloomberg story is true, the investment in NSM merits the peace of mind a CISO will enjoy when his or her CIRT is equipped with robust network visibility."
  },
  {
    "id": 4,
    "title": "Corelight: a recipe I couldn’t refuse",
    "image": "https://corelightblog.files.wordpress.com/2018/09/image-1.jpg?w=1224",
    "datePosted": "SEPTEMBER 26, 2018",
    "author": "Joy Bonaguro",
    "authorRole": "Head of People, Ops, and Data, Corelight",
    "summary": "It\u2019s hard to beat a mission like transforming government for the 21st Century. That\u2019s what I\u2019ve been doing for more or less my entire professional life. From building information systems in New Orleans both before and after Hurricane Katrina in 2005 to my latest role as Chief Data Officer of San Francisco, my professional life has been dedicated to public service.\r\n\r\nSo why the private sector? Why now? Why Corelight?",
    "details": "I first met Greg Bell during a meeting in 2011 when he was a division director at Lawrence Berkeley National Laboratory (Berkeley Lab). At that meeting, he turned an aimless discussion into a structured troubleshooting session. I gravitated towards him as a mentor.\r\n\r\nOnce he became CEO of Corelight, I started to watch closely because I knew that this company had three fundamental ingredients for success that made it worth joining:\r\n\r\nIngredient 1: An incredible technology with a mission that matters\r\n\r\nAlso in 2011, I first heard about open source Bro, the technology that Corelight is built on, when I had to describe how it worked as part of a job interview at Berkeley Lab. My immediate thoughts were a) awesome interview technique b) this technology sounds magical and c) why hasn\u2019t someone built a company on top of it?\r\n\r\nI spent the next few years working closely with the cyber team at Berkeley Lab and in that time I learned how real cybersecurity works. I discovered that it is something that extended far beyond compliance, checklists and appliance management and into a living system of dynamic response, continuous evolution, and learned resilience.\r\n\r\nBro empowered all of this. Whenever I try to describe Bro, I draw the following diagram. Bro extends well beyond signature based detection (SDS) to behavioral based detection and then to a proactive response. Bro is adaptive and scalable."
  },
  {
    "id": 5,
    "title": "Twenty years of network security monitoring: from the AFCERT to Corelight",
    "image": "",
    "datePosted": "SEPTEMBER 11, 2018",
    "author": "Richard Bejtlich",
    "authorRole": "Principal Security Strategist, Corelight",
    "summary": "I am really fired up to join Corelight. I’ve had to keep my involvement with the team a secret since officially starting on July 20th. Why was I so excited about this company? Let me step backwards to help explain my present situation, and forecast the future.",
    "details": "Twenty years ago this month I joined the Air Force Computer Emergency Response Team (AFCERT) at then-Kelly Air Force Base, located in hot but lovely San Antonio, Texas. I was a brand new captain who thought he knew about computers and hacking based on experiences from my teenage years and more recent information operations and traditional intelligence work within the Air Intelligence Agency. I was desperate to join any part of the then-five-year-old Information Warfare Center (AFIWC) because I sensed it was the most exciting unit on \u201CSecurity Hill.\u201D\r\n\r\nI had misjudged my presumed level of \u201Chacking\u201D knowledge, but I was not mistaken about the exciting life of an AFCERT intrusion detector! I quickly learned the tenets of network security monitoring, enabled by the custom software watching and logging network traffic at every Air Force base. I soon heard there were three organizations that intruders knew to be wary of in the late 1990s: the Fort, i.e. the National Security Agency; the Air Force, thanks to our Automated Security Incident Measurement (ASIM) operation; and the University of California, Berkeley, because of a professor named Vern Paxson and his Bro network security monitoring software.\r\n\r\nWhen I wrote my first book in 2003-2004, The Tao of Network Security Monitoring, I enlisted the help of Christopher Jay Manders to write about Bro 0.8. Bro had the reputation of being very powerful but difficult to stand up. In 2007 I decided to try installing Bro myself, thanks to the introduction of the \u201Cbrolite\u201D scripts shipped with Bro 1.2.1. That made Bro easier to use, but I didn\u2019t do much analysis with it until I attended the 2009 Bro hands-on workshop. There I met Vern, Robin Sommer, Seth Hall, Christian Kreibich, and other Bro users and developers. I was lost most of the class, saved only by my knowledge of standard Unix command line tools like sed, awk, and grep! I was able to integrate Bro traffic analysis and logs into my TCP/IP Weapons School 2.0 class, and subsequent versions, which I taught mainly to Black Hat students. By the time I wrote my last book, The Practice of Network Security Monitoring, in 2013, I was heavily relying on Bro logs to demonstrate many sorts of network activity, thanks to the high-fidelity nature of Bro data.\r\n\r\nIn July of this year, Seth Hall emailed to ask if I might be interested in keynoting the upcoming Bro users conference in Washington, D.C., on October 10-12. I was in a bad mood due to being unhappy with the job I had at that time, and I told him I was useless as a keynote speaker. I followed up with another message shortly after, explained my depressed mindset, and asked how he liked working at Corelight. That led to interviews with the Corelight team and a job offer. The opportunity to work with people who really understood the need for network security monitoring, and were writing the world\u2019s most powerful software to generate NSM data, was so appealing! Now that I\u2019m on the team, I can share how I view Corelight\u2019s contribution to the security challenges we face.\r\n\r\nFor me, Corelight solves the problems I encountered all those years ago when I first looked at Bro. The Corelight embodiment of Bro is ready to go when you deploy it. It\u2019s developed and maintained by the people who write the code. Furthermore, Bro is front and center, not buried behind someone else\u2019s logo. Why buy this amazing capability from another company when you can work with those who actually conceptualize, develop, and publish the code?\r\n\r\nIt\u2019s also not just Bro, but it\u2019s Bro at ridiculous speeds, ingesting and making sense of complex network traffic. We regularly encounter open source Bro users who spend weeks or months struggling to get their open source deployments to run at the speeds they need, typically in the tens or hundreds of Gbps. Corelight\u2019s offering is optimized at the hardware level to deliver the highest performance, and our team works with customers who want to push Bro to the even greater levels.  \r\n\r\nFinally, working at Corelight gives me the chance to take NSM in many exciting new directions. For years we NSM practitioners have worried about challenges to network-centric approaches, such as encryption, cloud environments, and alert fatigue. At Corelight we are working on answers for all of these, beyond the usual approaches \u2014 SSL termination, cloud gateways, and SIEM/SOAR solutions. We will have more to say about this in the future, I\u2019m happy to say!\r\n\r\nWhat challenges do you hope Corelight can solve? Leave a comment or let me know via Twitter to @corelight_inc or @taosecurity."
  },
  {
    "id": 6,
    "title": "There’s more to Bro than great network data",
    "image": "",
    "datePosted": "SEPTEMBER 6, 2018",
    "author": "Vincent Stoffer",
    "authorRole": "Senior Director of Product Management, Corelight",
    "summary": "Corelight recently released our 1.15 software update which includes some fantastic new features, including our first group of curated Bro Packages which we\u2019re calling the \u201CCore Collection.\u201D  In this blog post, I\u2019ll tell you a bit more about how Corelight is making it easier to detect threats on your network, and providing even better data to respond to them.\r\n\r\nI had misjudged my presumed level of \u201Chacking\u201D knowledge, but I was not mistaken about the exciting life of an AFCERT intrusion detector! I quickly learned the tenets of network security monitoring, enabled by the custom software watching and logging network traffic at every Air Force base. I soon heard there were three organizations that intruders knew to be wary of in the late 1990s: the Fort, i.e. the National Security Agency; the Air Force, thanks to our Automated Security Incident Measurement (ASIM) operation; and the University of California, Berkeley, because of a professor named Vern Paxson and his Bro network security monitoring software.\r\n\r\nWhen I wrote my first book in 2003-2004, The Tao of Network Security Monitoring, I enlisted the help of Christopher Jay Manders to write about Bro 0.8. Bro had the reputation of being very powerful but difficult to stand up. In 2007 I decided to try installing Bro myself, thanks to the introduction of the \u201Cbrolite\u201D scripts shipped with Bro 1.2.1. That made Bro easier to use, but I didn\u2019t do much analysis with it until I attended the 2009 Bro hands-on workshop. There I met Vern, Robin Sommer, Seth Hall, Christian Kreibich, and other Bro users and developers. I was lost most of the class, saved only by my knowledge of standard Unix command line tools like sed, awk, and grep! I was able to integrate Bro traffic analysis and logs into my TCP/IP Weapons School 2.0 class, and subsequent versions, which I taught mainly to Black Hat students. By the time I wrote my last book, The Practice of Network Security Monitoring, in 2013, I was heavily relying on Bro logs to demonstrate many sorts of network activity, thanks to the high-fidelity nature of Bro data.\r\n\r\nIn July of this year, Seth Hall emailed to ask if I might be interested in keynoting the upcoming Bro users conference in Washington, D.C., on October 10-12. I was in a bad mood due to being unhappy with the job I had at that time, and I told him I was useless as a keynote speaker. I followed up with another message shortly after, explained my depressed mindset, and asked how he liked working at Corelight. That led to interviews with the Corelight team and a job offer. The opportunity to work with people who really understood the need for network security monitoring, and were writing the world\u2019s most powerful software to generate NSM data, was so appealing! Now that I\u2019m on the team, I can share how I view Corelight\u2019s contribution to the security challenges we face.\r\n\r\nFor me, Corelight solves the problems I encountered all those years ago when I first looked at Bro. The Corelight embodiment of Bro is ready to go when you deploy it. It\u2019s developed and maintained by the people who write the code. Furthermore, Bro is front and center, not buried behind someone else\u2019s logo. Why buy this amazing capability from another company when you can work with those who actually conceptualize, develop, and publish the code?\r\n\r\nIt\u2019s also not just Bro, but it\u2019s Bro at ridiculous speeds, ingesting and making sense of complex network traffic. We regularly encounter open source Bro users who spend weeks or months struggling to get their open source deployments to run at the speeds they need, typically in the tens or hundreds of Gbps. Corelight\u2019s offering is optimized at the hardware level to deliver the highest performance, and our team works with customers who want to push Bro to the even greater levels.  \r\n\r\nFinally, working at Corelight gives me the chance to take NSM in many exciting new directions. For years we NSM practitioners have worried about challenges to network-centric approaches, such as encryption, cloud environments, and alert fatigue. At Corelight we are working on answers for all of these, beyond the usual approaches \u2014 SSL termination, cloud gateways, and SIEM/SOAR solutions. We will have more to say about this in the future, I\u2019m happy to say!\r\n\r\nWhat challenges do you hope Corelight can solve? Leave a comment or let me know via Twitter to @corelight_inc or @taosecurity.",
    "details": "Bro is much more than just a source of network data, it\u2019s also a Turing-complete, domain-specific programming language.  Expert users know that Bro scripts (now often shared as packages) are the way to tune your sensors to generate alerts, customize the data output, and to take action.  At Corelight we support running custom Bro Packages on our platform, and some of the technical details of how and why we did that are described in this blog post.\r\n\r\nDespite the fact that customers can run their own Bro scripts and packages on our platform, we find that many people still want easier access to content created by Corelight and the broader Bro community.  So in our 1.15 software release we chose 10 of the most popular and interesting Bro Packages (most contributed by members of the Bro community) and pre-loaded them directly onto the Corelight Sensor platform.  We believe making the results of Bro\u2019s powerful scripting language available by default and easy to use means you\u2019ll not only have the best data for forensics, incident response, and threat hunting, but you\u2019ll also have detections and enrichments that make your workflow easier.\r\n\r\nLike any Bro packages running on a Corelight sensor, these 10 run in a sandboxed environment to protect the underlying operating system, and we\u2019ve also ensured they don\u2019t significantly impact the performance of the sensor, and we made them as easy to enable as flipping a switch.\r\n\r\nWe divided these packages into 3 separate functional groups: detection, data enrichment, and operations.  Our intent is to demonstrate how powerful Bro\u2019s scripting capabilities can be across a variety of use cases.  I\u2019ll briefly describe what packages we included in each group and how to use them:\r\n\r\nDetection:\r\n\r\nbitcoin \u2013 Detects Bitcoin, Litecoin, etc. mining traffic over TCP or HTTP and generates an alert.  Useful to track down users exploiting internal system or network resources for profit.\r\n\r\nja3 \u2013 A popular package written by the security team at Salesforce, this hashes properties of the SSL/TLS client negotiation to help identify and catalog client software being used over SSL/TLS.  Once you\u2019ve associated a ja3 hash to a piece of software (whether it\u2019s a particular version of a web browser of a piece of malware), it\u2019s easy to match and alert on those hashes using Bro\u2019s intelligence framework.  And because those client negotiation properties don\u2019t change, you can use the ja3 hashes to pinpoint client software regardless of the IP it\u2019s coming from or the external server it\u2019s reaching out to.\r\n\r\nhttp stalling \u2013 Detects a web client sending data very slowly (a resource exhaustion attack) against a webserver and generates an alert.\r\n\r\nlong connections \u2013 Because Bro usually only logs connections when they have completed, this package detects long connections that are still running and logs them periodically.  Because malware can use persistent connections, this log is great for identifying ongoing C&C channels and generally keeping your eye on other long-running connections to establish them as valid or malicious.\r\n\r\nscan detection \u2013 A great example of the ability of Bro to provide behavioral insight, this detects machines that are port scanning (both vertically and horizontally) and generates an alert.  It\u2019s very useful for finding recon and feeding into an orchestration platform for blacklisting.\r\n\r\nData Enrichment:\r\n\r\nHostname enrichment \u2013 One of the most common first steps when investigating network traffic is to map an IP address to its corresponding hostname.  This Corelight only feature tracks hostnames observed over DNS by the sensor, and add them as a new column to the conn.log. This speeds the incident response workflow, by providing those hostnames where available, and does so without tipping your hand to potential adversaries with an active DNS lookup.\r\n\r\nSMTP URL extraction \u2013 For SMTP, this extracts any URLs which are seen in the message body.  Useful for searching for phishing links and doing URL intelligence matching on live email.\r\n\r\nhttp post bodies \u2013 Writes an additional field into the http.log that adds the POST body data (size limited).  Watch for credentials, C&C, and more in HTTP traffic.\r\n\r\nOperations:\r\n\r\nshunting \u2013 Corelight\u2019s flagship platform, the AP 3000, can now handle shunting large or long running connections using its integrated NIC \u2013 which allows performance to be maintained in extreme conditions, while still preserving connection state information.  For our other platforms, this script also shows what connections would have been shunted, helping to profile traffic meeting certain conditions. A number of options are configurable in the new Web GUI to tune the threshold for shunting.\r\n\r\nSSL expiring certs \u2013 Highlights any internal x509 certificates which are expired or will be expiring within 30 days.  A great way to double check on the integrity of your secure applications.\r\n\r\nAs you can see, there is a lot to explore!  We\u2019ve made it easy to enable any of these packages and this is only the first step \u2013\u2013 we plan to offer lots more content for the Core Collection and even other collections in the future."
  },
  {
    "id": 7,
    "title": "Corelight’s recent contributions to open-source Bro",
    "image": "",
    "datePosted": "AUGUST 9, 2018",
    "author": "Robin Sommer",
    "authorRole": "CTO at Corelight and Bro development lead",
    "summary": "When we founded Corelight in 2013, one of our goals was to build an organization that could sustain open-source Bro development long term. At that time, the core team behind Bro was still funded primarily through grants from the National Science Foundation. One of the underlying assumptions coming with that funding was that, with our work, Bro would become self-supporting: production-quality open-source software could generate a revenue stream to support its own development. Today, five years later, with many of the people who created and maintained Bro over the last two decades working at Corelight, that vision is becoming reality. Corelight is bridging the gap between the open-source software and enterprise environments looking for professional, supported products\u2014they get the expertise of Bro\u2019s creators packaged into a high-quality solution. In return, the success of Corelight enables us to invest heavily into advancing open-source Bro. You can rest assured that our team remains as committed to Bro as ever\u2014no change there. In that spirit, I want to take the opportunity here to talk about a few of our more recent contributions to open-source Bro.",
    "details": "By holding BroCon in the Washington DC area this year, we were hoping to broaden participation\u2014and that worked: 260 people attended, up over 35% from last year.  We also had the support of eleven corporate sponsors\u2014more than ever!-\u2014which we deeply appreciate. These companies offered attendees a chance to learn about a variety of products and services helping people use and implement Zeek, either in its open source form or as part of commercial offerings.\r\n\r\nI think BroCon\u2019s program was particularly strong this year. Marcus Ranum kicked it off with an entertaining and provocative keynote. The main technical program then offered a terrific set of presentations covering a variety of organizations and topics. Some of the conference highlights for me were:\r\n\r\nThe sheer number of use cases. In the sessions, we saw things like:\r\nusing weirds to diagnose split routing problems\r\nusing the conn_long log to identify exfiltration / C2 / rogue IT activity\r\nusing JA3S to extend SSL fingerprinting to the server side\r\nusing SMB logs to find named pipes in the Belgacom attack.  \r\nWatching Salesforce and Morgan Stanley stand up and explain how they use Bro to defend themselves was inspirational.\r\nThe depth of technical expertise among attendees was really impressive. Folks keep pushing the boundary of how to scale Zeek clusters and come up with clever use cases of its various frameworks.\r\nSelling Bro posters to benefit Girls Who Code was fantastic.\r\nVern\u2019s \u201CZeek\u201D name reveal moment and the positive reception of the name change by the broader community.\r\nWe received permission to record most of the talks and are currently editing the material to synchronize videos with slide sets. As soon as that\u2019s finished, we\u2019ll upload them to the Bro YouTube channel.\r\n\r\nAs we look to next year, the Zeek Leadership Team will begin planning the 2019 event soon. If you have attended this year, please take a moment to fill out the attendee survey; you should have received a link to provide us with feedback about program and logistics. In 2019, we\u2019ll also do another European workshop as well. Registration details will come soon, but you can save the date already: We\u2019ll be at CERN, Switzerland, from April 9-11.\r\n\r\nLastly, it will take some time to really make the change from Bro to Zeek. The soon-to-be-released version 2.6 will still be \u201CBro\u201D\u2014from then on it\u2019ll be \u201CZeek.\u201D Over the coming weeks and months you will start seeing changes, but rest assured we\u2019ll be careful: There\u2019s a lot to update, and we certainly don\u2019t want to break your deployments.\r\n\r\nThanks for attending the last ever BroCon!"
  },
  {
    "id": 8,
    "title": "Databricks + Corelight – A powerful combination for cybersecurity, incident response and threat hunting",
    "image": "https://corelightblog.files.wordpress.com/2018/07/screen-shot-2018-07-16-at-2-23-15-pm.png?w=1224",
    "datePosted": "JULY 17, 2018",
    "author": "Alan Saldich",
    "authorRole": "CMO, Corelight",
    "summary": "Incident response, threat hunting and cybersecurity in general relies on great data. Just like the rest of the world where virtually everything these days is data-driven, from self-driving cars to personalized medicine, effective security strategies also need to be data-driven.",
    "details": "Incident response, threat hunting and cybersecurity in general relies on great data. Just like the rest of the world where virtually everything these days is data-driven, from self-driving cars to personalized medicine, effective security strategies also need to be data-driven.\r\n\r\nWhatever security solution, service or business process you implement, it probably relies on data from just four sources: logs, networks, hosts and third party intelligence feeds. Some or all of that data is fed into an analytics stack like Apache Spark\u2122 where advanced analytics, artificial intelligence, machine learning and other techniques can be applied.\r\n\r\nWhen it comes to the data about network traffic though, most organizations are stuck between \u201Cnot enough data\u201D and \u201Cway too much.\u201D The former is normally NetFlow data that provides basic information about network traffic, source / destination IPs, time and date, bytes sent / received and few other important (but sparse) pieces of information. The latter is typically PCAP (packet capture) where every bit on the wire is stored. Since big networks carry a tremendous amount of data, storing it all is non-trivial and can become expensive and cumbersome.\r\n\r\nThe Alternative\r\nScreen Shot 2018-07-16 at 2.07.56 PMSo what\u2019s the alternative? Well for over 20 years, an open source project called Bro has been used in production at some of the world\u2019s largest organizations and biggest networks, namely government agencies, research universities and very large / web-scale companies.\r\n\r\nBro is a network monitoring framework that ingests a copy of all traffic on a network, parses and analyzes it in real time using its event processing engines and scripts, and then outputs data (\u201CBro logs\u201D) to some external analytics system like Spark. There are dozens of Bro logs for most common protocols like SMTP, SSL, SMB, DHCP, DNS and many others. Each Bro log contains 10 to 40 fields describing that part of the network traffic.\r\n\r\nimg bro logs id tracking.png\r\n\r\nFurthermore, Bro logs include key pivot points in the data that allow incident responders to follow their instincts or observations by taking advantage of unique identifiers for critical aspects of network traffic: all connections (Connection UID) and files (FUID) are uniquely identified. Along with consistent and precise timestamps across all logs, Bro gives incident responders access to everything they\u2019ll need to resolve most security incidents quickly without having to resort to PCAP except in rare instances.\r\n\r\nCorelight was founded by the creators of Bro to deliver network security solutions built on this powerful and widely used framework. Since Corelight does not provide an analytics application, we are excited to work with leading companies like Databricks to combine the power of Bro data with the intelligence of Apache Spark and all of its analytic capability.\r\n\r\nThe challenge of managing threats in a big data world\r\nStaying abreast of the latest threat isn\u2019t the only challenge. The increasing volume and complexity of threats require security teams to capture and mine mountains of data in order to avoid a breach. Yet, the Security Information and Event Management (SIEM) and threat detection tools they\u2019ve come to rely on were not built with big data in mind resulting in a number of challenges:\r\n\r\nInability to scale cost efficiently\r\nCompanies deploy logging and monitoring devices across their networks, end-user devices and production machines to help detect suspicious behavior. These tools produce petabytes of log data that need to be contextualized and analyzed in real-time. Processing petabytes of data takes significant computing power. Unfortunately, most SIEM tools were built for on-premises environments requiring significant build-outs to meet processing demands. Additionally, most SIEM tools charge customers per GB of data ingested. This makes scaling threat detection tools for large volumes of data incredibly cost-prohibitive.\r\nInability to conduct historic reviews in real-time\r\nIdentifying a cybersecurity breach as soon as it happens is critical to minimizing data theft, damages, and creation of backlogs. As soon as an event occurs, security analysts need to conduct deep historic analyses to fully investigate the validity and breadth of an attack. Without a means to efficiently scale existing tools most security teams only have access to a few weeks of historical data. This limits the ability of security teams to identify attacks over long time horizons or conduct forensic reviews in real-time.\r\nAbundance of false positives\r\nAnother common challenge is the high volume of false positives produced by SIEM tools. The massive amounts of data captured in OS logs, cloud infrastructure logs, intrusion detection systems and other monitoring devices produce events that in isolation or in connection with other events may signify a compromised network. Most events need further investigation to determine if the threat is legitimate. Relying on individuals to review hundreds of alerts including a large number of false positives results in alert fatigue. Eventually, overwhelmed security teams disregard or overlook events that are in actuality legitimate threats.\r\nIn order to effectively detect and remediate threats in today\u2019s environment, security teams need to find a better way to process and correlate massive amounts of real-time and historical data, detect patterns that exist outside pre-defined rules and reduce the number of false positives.\r\n\r\nEnhancing threat detection with scalable analytics and AI\r\nScreen Shot 2018-07-16 at 2.25.24 PMDatabricks offers security teams a new set of tools to combat the growing challenges of big data and sophisticated threats. Where existing tools fall short, the Databricks Unified Analytics Platform fills the void with a platform for data scientists and cybersecurity analysts to easily build, scale, and deploy real-time analytics and machine learning models in minutes, leading to better detection and remediation.\r\n\r\nDatabricks complements existing threat detection efforts with the following capabilities:\r\n\r\nFull enterprise visibility\r\nNative to the cloud and built on Apache Spark by the original creators of Apache Spark, Databricks is optimized to process large volumes of streaming and historical data for real-time threat analysis and review. Security teams can query petabytes of historical data stretching months or years into the past, making it possible to profile long-term threats and conduct deep forensic reviews to uncover backdoors left behind by hackers. Security teams can also integrate all types of enterprise data \u2013 SIEM logs, cloud logs, system security logs, threat feeds, etc \u2013 for a more complete view of the threat environment.\r\nProactive threat analytics\r\nDatabricks enables security teams to build predictive threat intelligence with a powerful, easy-to-use platform for developing AI and machine learning models. Data scientists can build machine learning models that better score alerts from SIEM tools reducing reviewer fatigue caused by too many false positives. Data scientists can also use Databricks to build machine learning models that detect anomalous behaviors that exist outside pre-defined rules and known threat patterns.\r\nCollaborative investigations\r\nInteractive notebooks and dashboards enable data scientists, analysts and security teams to collaborate in real-time. Multiple users can run queries, share visualizations and make comments within the same workspace to keep investigations moving forward without interruption.\r\nCost efficient scale\r\nThe Databricks platform is fully managed in the cloud with cost-efficient pricing designed for big data processing. Security teams don\u2019t need to absorb the costly burden of building and maintaining a homegrown cybersecurity analytics platform or paying per GB of data ingested and retained.\r\nHow a Fortune 100 company uses Databricks and advanced cybersecurity analytics to combat threats\r\nA leading technology company employs a large cybersecurity operations center to monitor, analyze and investigate trillions of threat signals each day. Data flows in from a diverse set of sources including intrusion detection systems, network infrastructure and server logs, application logs and more, totaling petabytes in size.\r\n\r\nWhen a suspicious event is identified, threat response teams need to run queries in real-time against large historical datasets to verify the extent and validity of a potential breach. To keep pace with the threat environment the team needed a solution capable of:\r\n\r\nLarge data volumes at low latency: Analyze billions of records within seconds\r\nCorrect and consistent data: Partial and failed writes cannot show up in user queries\r\nFast, flexible queries on current and historical data: Security analysts need to explore petabytes of data with multiple languages (e.g. Python, SQL)\r\nAs an example of how customers are using advanced cybersecurity analytics, check out this recent video from Apple.\r\n\r\nFor another more general explanation of how Corelight and Databricks can be deployed together, Databricks produced this video that includes an explanation of how they ingest Bro logs as part of their security solution.\r\n\r\nScreen Shot 2018-07-16 at 2.17.44 PM\r\n\r\nThe Challenge\r\nIt took a team of twenty engineers over six months to build their legacy architecture that consisted of various data lakes, data warehouses, and ETL tools to try to meet these requirements. Even then, the team was only able to store two weeks of data in its data warehouses due to cost, limiting its ability to look backward in time. Furthermore, the data warehouses chosen were not able to run machine learning.\r\n\r\nScreen Shot 2018-07-16 at 10.20.15 AM.png\r\n\r\nThe Solution\r\nUsing the Databricks Unified Analytics platform the company was able to put their new architecture into production in just two weeks with a team of five engineers.\r\n\r\nTheir new architecture is simple and performant. End-to-end latency is low (seconds to minutes) and the threat response team saw up to 100x query speed improvements over open source Apache Spark on Parquet. Moreover, using Databricks, the team is now able to run interactive queries on all its historical data \u2014 not just two weeks worth \u2014 making it possible to better detect threats over longer time horizons and conduct deep forensic reviews. They also gain the ability to leverage Apache Spark for machine learning and advanced analytics.\r\n\r\nScreen Shot 2018-07-16 at 10.20.21 AM\r\n\r\nFinal Thoughts\r\nAs cybercriminals continue to evolve their techniques, so do cybersecurity teams need to evolve how they detect and prevent threats. Comprehensive network traffic extracted by Bro is the highest quality data available to incident responders and threat hunters, and an essential ingredient to the Databricks analytics platform for cybersecurity. Big data analytics and AI offer a new hope for organizations looking to improve their security posture, but choosing the right platform is critical to success.\r\n\r\nDownload our Cybersecurity Analytics Solution Brief or watch the replay of our recent webinar \u201CEnhancing Threat Detection with Big Data and AI\u201D to learn how Databricks can enhance your security posture, including ingestion of Bro logs for network traffic monitoring."
  },
  {
    "id": 9,
    "title": "How Bro logs gave one company better DNS traffic visibility than their DNS servers",
    "image": "",
    "datePosted": "JUNE 11, 2018",
    "author": "Howard Samuels",
    "authorRole": "CTO at Corelight and member of the Zeek Leadership Team",
    "summary": "Bro provides enriched network visibility for top organizations around the world, and there are many use cases for Bro logs.   The security field uses Bro data for incident response and cyber threat hunting. But Bro log use cases don’t always have to involve finding bad actors, identifying breaches or attack blueprints.  The clean, structured, and enriched data from Bro can also be used to simply provide necessary protocol information not otherwise easily obtained from servers.",
    "details": "In this example, we show how a company can obtain DNS visibility and extend the lifespan of a large production deployment of DNS servers via a few Corelight sensors that generate Bro DNS logs. This use case features a utility company with over 50 DNS servers worldwide.  A federal governing body told them that there were DNS lookups going to known cyber threat sites originating from their network and therefore they weren\u2019t sufficiently self-governing their DNS activity. Given the importance and focus on safeguarding utility companies from cyber attacks, getting in front of this DNS issue was of paramount importance.  \r\n\r\nThe company had limited DNS network visibility because their DNS servers could not effectively log activity.   The DNS logging service on their servers didn\u2019t give enough functional information \u2013 and therefore visibility \u2013 to identify these malicious communications.  Moreover, the data their DNS servers did provide was a flat file with too much noise and the logging mechanism also had a negative impact on the DNS servers\u2019 overall performance.    \r\n\r\nThey considered upgrading all their DNS servers, but given the cost they discarded this option.  They determined that a more comprehensive, faster, and cost-effective solution was to deploy Corelight sensors in their main data centers to obtain enriched Bro DNS logs.  With Corelight and Bro they could easily capture both DNS requests and answers to queries and quickly stream them to a SIEM. The benefit was immediately clear when an analyst who had previously tried to identify non-authoritative DNS lookup records was able to easily achieve this with the logs provided by Corelight sensors.\r\n\r\nThe utility company used packet broker to distribute raw traffic to the Corelight sensors which then do the heavy lifting of extracting the DNS information into a log or data stream for export to their SIEM.  The solution architecture is simply network taps sending traffic into a packet broker. Behind the broker is a Corelight sensor. The packet broker filters are configured to send only DNS traffic to the Corelight Sensor.  The enriched logs are spooled from the Corelight sensor to a datastore and ultimately consumed in a SIEM. Problem solved, customer happy, money saved and the technology team are now heroes. Their security team is now looking at network logs and will look at expanding their use to the SOC.  \r\n\r\nThinking more broadly beyond DNS, consider other crucial network services and the struggle to keep accurate time stamped logs and your ability to get enriched data from these services?  What if network service logging for DHCP, Kerberos, or Radius is set to OFF, FATAL, WARN or ERROR \u2013 i.e. not nearly enough data? Or, ALL, DEBUG or TRACE \u2013 too much noise? What if INFO misses the data you need?  What if there is only one logging service level and therefore not configurable? Bro provides better network data that can spare operational cycles and extend the life of network services, thereby saving money and just as importantly reducing operational headaches."
  },
  {
    "id": 10,
    "title": "Another cool thing about Bro: SMB analysis!",
    "image": "http://www3.corelight.com/smb-analysis-james-schweitzer",
    "datePosted": "MAY 29, 2018",
    "author": "James Schweitzer",
    "authorRole": "CTO at Corelight and member of the Zeek Leadership Team",
    "summary": "If you\u2019re reading this blog, you probably know that Bro can uncover indicators of compromise and discover adversary lateral movement by monitoring east-west traffic within the enterprise. But you may not know about one of the best sources of data for this purpose, the Bro server message block (SMB) logs.  Bro\u2019s SMB protocol analyzer has undergone several iterations, and it is now a built-in feature that many Bro users might have overlooked. If you are running Bro 2.5, all that is needed is to manually load the SMB policy.",
    "details": "SMB is used for many purposes. Most users of Windows networks rely on SMB every day when accessing files on network drives, and network administrators use the same protocol when they perform remote administration. Unfortunately the adversary, whether script kiddies or nation-state actors, also uses SMB! By the way, do you know whether SMBv1 is running on your network\u2026 and how can you be sure?\r\n\r\nThe video that accompanies this blog provides an introduction to the power of Corelight\u2019s advanced filtering and the content contained in Bro\u2019s SMB logs to monitor SMB usage for remote scheduled tasks and file access. If you use Bro to monitor SMB, please share tips here so others can benefit \u2013 if you don\u2019t use Bro, would you like to learn how it transforms raw network traffic into comprehensive, organized logs? If you are interested in learning more detail about Bro\u2019s ability to detect malicious activity hidden in SMB, this SANS paper is a great place to start.\r\n\r\nI hope you enjoy this short introductory video. Good luck and good hunting!"
  }
]
